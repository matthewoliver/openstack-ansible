---
cidr_networks:
{% if bootstrap_host_scenario == "translations" %}
  dbaas: fd00:0:0:5::0/112
{% endif %}
{% if bootstrap_host_scenario in ["octavia"] %}
  lbaas: fd00:0:0:6::0/112
{% endif %}
  container: fd00:0:0:1::0/112
  tunnel: fd00:0:0:2::0/112
  storage: fd00:0:0:3::0/112

used_ips:
{% if bootstrap_host_scenario == "translations" %}
  - "fd00:0:0:5::1,fd00:0:0:5::50"
  - "fd00:0:0:5::100"
{% endif %}
{% if bootstrap_host_scenario in ["translations", "octavia"] %}
  - "fd00:0:0:6::1,fd00:0:0:6::50"
  - "fd00:0:0:6::100"
{% endif %}
  - "fd00:0:0:1::1,fd00:0:0:1::50"
  - "fd00:0:0:1::100"
  - "fd00:0:0:2::1,fd00:0:0:2::50"
  - "fd00:0:0:2::100"
  - "fd00:0:0:3::1,fd00:0:0:3::50"
  - "fd00:0:0:3::100"
  - "fd00:0:0:4::1,fd00:0:0:4::50"
  - "fd00:0:0:4::100"

global_overrides:
  internal_lb_vip_address: fd00:0:0:1::100
  # The external IP is quoted simply to ensure that the .aio file can be used as input
  # dynamic inventory testing.
  external_lb_vip_address: "{{ bootstrap_host_public_address | default(ansible_default_ipv4.address) }}"
  management_bridge: "br-mgmt"
  provider_networks:
    - network:
        container_bridge: "br-mgmt"
        container_type: "veth"
        container_interface: "eth1"
        ip_from_q: "container"
        type: "raw"
        group_binds:
          - all_containers
          - hosts
        is_container_address: true
    - network:
        container_bridge: "br-vxlan"
        container_type: "veth"
        container_interface: "eth10"
        ip_from_q: "tunnel"
        type: "vxlan"
        range: "1:1000"
        net_name: "vxlan"
        group_binds:
          - neutron_linuxbridge_agent
{% if bootstrap_host_scenario == "translations" %}
    - network:
        container_bridge: "br-dbaas"
        container_type: "veth"
        container_interface: "eth13"
        host_bind_override: "eth13"
        ip_from_q: "dbaas"
        type: "flat"
        net_name: "flat-db"
        group_binds:
          - neutron_linuxbridge_agent
          - rabbitmq
{% endif %}
{% if bootstrap_host_scenario in ["octavia"] %}
    - network:
        container_bridge: "br-lbaas"
        container_type: "veth"
        container_interface: "eth14"
        host_bind_override: "eth14"
        ip_from_q: "lbaas"
        type: "flat"
        net_name: "lbaas"
        group_binds:
          - neutron_linuxbridge_agent
          - octavia-worker
          - octavia-housekeeping
          - octavia-health-manager
{% endif %}
    - network:
        container_bridge: "br-vlan"
        container_type: "veth"
        container_interface: "eth12"
        host_bind_override: "eth12"
        type: "flat"
        net_name: "flat"
        group_binds:
          - neutron_linuxbridge_agent
    - network:
        container_bridge: "br-vlan"
        container_type: "veth"
        container_interface: "eth11"
        type: "vlan"
        range: "101:200,301:400"
        net_name: "vlan"
        group_binds:
          - neutron_linuxbridge_agent
    - network:
        container_bridge: "br-storage"
        container_type: "veth"
        container_interface: "eth2"
        ip_from_q: "storage"
        type: "raw"
        group_binds:
          - glance_api
          - cinder_api
          - cinder_volume
          - nova_compute
          - swift_proxy

# galera, memcache, rabbitmq, utility
shared-infra_hosts:
  aio1:
    ip: fd00:0:0:1::100
    container_vars:
      # Optional | container_tech for a target host, default is "lxc".
      container_tech: "{{ container_tech }}"

repo-infra_hosts:
  aio1:
{% if install_method == 'distro' %}
    affinity:
      repo_container: 0
{% endif %}
    ip: fd00:0:0:1::100

log_hosts:
  aio1:
    ip: fd00:0:0:1::100
